[flake8]
# SOURCE: http://flake8.pycqa.org/en/2.6.0/config.html
# it's not a bug that we aren't using all of hacking, ignore:
# F812: list comprehension redefines ...
# H101: Use TODO(NAME)
# H202: assertRaises Exception too broad
# H233: Python 3.x incompatible use of print operator
# H301: one import per line
# H306: imports not in alphabetical order (time, os)
# H401: docstring should not start with a space
# H403: multi line docstrings should end on a new line
# H404: multi line docstring should start without a leading new line
# H405: multi line docstring summary not separated with an empty line
# H501: Do not use self.__dict__ for string formatting
# F401: imported but unused
# W604 backticks are deprecated, use 'repr()'
# F811 redefinition of unused 'mocker' from line 13
# F841 local variable 'mock_datadog_initialize' is assigned to but never used
# ignore the most ridiculous test added in v3.5.0
# (E741: do not use variables named 'l', 'O', or 'I'
ignore =
    E741
    F812
    H101
    H202
    H233
    H301
    H306
    H401
    H403
    H404
    H405
    H501
    F401
    W604
    F811
    F841
    E302
    E401
    E501
    E265
    E713
    E402
    D204
    D102
    D400
    D205
    D202
    D103
    D209
    D105
    D101
    D401
    D200
    E127
    D100
    E241
    E704
    E251
    W503
    W504
    E722
    W605

exclude =
    # No need to traverse our git directory
    .git,
    # There's no value in checking cache directories
    __pycache__,
    # The conf file is mostly autogenerated, ignore it
    docs/source/conf.py,
    # The old directory contains Flake8 2.0
    old,
    # This contains our built documentation
    build,
    # This contains builds of flake8 that we don't want to check
    dist,
    .svn,
    CVS,
    .bzr,
    .hg,
    .tox,
    docs,
    virtualenv_run,
    tests/*.,
    venv*,
    venv*/*
    .venv,
    www_static,
    venv,
    bin,
    lib,
    deps,
    tests/fixtures/simple/packs/linux/actions/checks,
    .eggs,
    stubs/*
max-line-length = 200
# max-complexity: which will emit a warning if the McCabe complexity of a function is higher than the value. By default it's deactivated.
max-complexity = 12
